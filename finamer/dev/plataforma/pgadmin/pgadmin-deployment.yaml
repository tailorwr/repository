apiVersion: v1
kind: Secret
metadata:
   name: pgadmin-secret
   namespace: postgres-prod
type: Opaque
data:
   pgadmin-password: U3VwZXJTZWNyZXQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
   name: pgadmin-config
   namespace: postgres-prod
data:
   servers.json: |
      {
        "Servers": {
          "1": {
             "Name": "PostgresProd Cluster",
             "Group": "Servers",
             "Port": 5432,
             "Username": "app", # username of our cluster PostgreSQL instance
             "Host": "zeus-rw.postgres-prod.svc.cluster.local", # the url to connect to PostgreSQL instance, in this case we will connect to primary instance
             "SSLMode": "prefer",
             "MaintenanceDB": "app" # the default DB to connect in our cluster PostgreSQL instance
          }
        }
      }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
   name: pgadmin
   namespace: postgres-prod
spec:
  serviceName: pgadmin-service
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: pgadmin-data-permission-fix
          image: busybox
          command: ["/bin/chown", "-R", "5050:5050", "/var/lib/pgadmin"]
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin

      containers:
        - name: pgadmin
          image: dpage/pgadmin4:8.8
          imagePullPolicy: Always
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: admin@tailorw.com # the default username to login into PgAdmin
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: pgadmin-password
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: pgadmin-config
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
      volumes:
        - name: pgadmin-config
          configMap:
            name: pgadmin-config
  volumeClaimTemplates:
    - metadata:
        name: pgadmin-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 3Gi
---
apiVersion: v1
kind: Service
metadata:
   name: pgadmin-service
   namespace: postgres-prod
spec:
   ports:
   -   protocol: TCP
       port: 80
       targetPort: http
   selector:
      app: pgadmin
   type: NodePort
---
apiVersion: v1
kind: Service
metadata:
   name: pgadmin-service-ext
   namespace: postgres-prod
spec:
   ports:
   -   protocol: TCP
       port: 80
       targetPort: http
   selector:
      app: pgadmin
   type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin-ingress
  namespace: postgres-prod
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
  - host: "pgadmindev.tailorw.net"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: pgadmin-service-ext
            port:
              number: 80
  tls:
  - hosts:
    - pgadmindev.tailorw.net
    secretName: tls
