apiVersion: v1
kind: PersistentVolume
metadata:
  name: elasticsearch-pv
  labels:
    app: elasticsearch
spec:
  storageClassName: local-storage-elastic
  claimRef:
    name: elasticsearch-pvc
    namespace: elastic-dev
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  local:
    path: "/data/elasticdev"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: app
          operator: In
          values:
          - elasticsearch
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
  namespace: elastic-dev
spec:
  storageClassName: local-storage-elastic
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: elastic-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
          env:
            - name: discovery.type
              value: "single-node"
            - name: xpack.security.enabled
              value: "true"
            - name: ELASTIC_PASSWORD
              value: "3WT2tyFUzaZWKADl"
          ports:
            - containerPort: 9200
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
          securityContext:
            capabilities:
              add: ["IPC_LOCK"]
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "4Gi"
              cpu: "1"
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: elastic-dev
spec:
  selector:
    app: elasticsearch
  ports:
    - protocol: TCP
      port: 9200
      targetPort: 9200
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: elastic-np
  namespace: elastic-dev
  labels:
    app: elasticsearch
spec:
  type: NodePort
  selector:
    app: elasticsearch
  ports:
  - protocol: TCP
    port: 9200
    targetPort: 9200
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: elastic-ingress
  namespace: elastic-dev
  annotations:
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      Host: $host
      X-Forwarded-For: $proxy_add_x_forwarded_for
      X-Forwarded-Host: $host
      X-Forwarded-Port: $server_port
      X-Forwarded-Proto: $scheme
    nginx.ingress.kubernetes.io/enable-websockets: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  ingressClassName: nginx
  defaultBackend:
    service:
      name: elasticsearch
      port:
        number: 9200
  rules:
  -  host: elasticsearchdev.tailorw.net
     http:
       paths:
       -  pathType: Prefix
          path: "/"
          backend:
            service:
              name: elasticsearch
              port:
                number: 9200